generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(uuid())
  name                 String
  email                String    @unique
  confirmed_email      Boolean   @default(false)
  confirm_email_token  String?
  password             String
  reset_password_token String?
  admin                Boolean   @default(false)
  created_at           DateTime  @default(now())
  updated_at           DateTime?

  @@unique(fields: [email, confirm_email_token], name: "confirmEmailTokenIsValid")
  @@unique(fields: [email, reset_password_token], name: "resetPasswordTokenIsValid")
  @@unique(fields: [id, admin], name: "isAdmin")
  @@unique(fields: [email, confirmed_email], name: "emailConfirmed")
  @@map("users")
}

model Blog {
  id         String    @id @default(uuid())
  title      String    @unique
  resume     String    @unique
  image      String    @unique
  category   String
  body       String    @unique
  slug       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime?

  @@map("blog")
}

model Game {
  id           String    @id @default(uuid())
  title        String    @unique
  year_release Int
  price        Int
  resume       String    @unique
  image        String    @unique
  igdb_link    String    @unique
  igdb_rating  Int
  platforms    String
  developer    String
  genres       String
  amazon_link  String?   @unique
  created_at   DateTime  @default(now())
  updated_at   DateTime?

  @@map("games")
}

model Book {
  id           String    @id @default(uuid())
  title        String    @unique
  year_release Int
  price        Int
  image        String    @unique
  resume       String    @unique
  pages        Int
  genres       String
  author       String
  amazon_link  String?   @unique
  created_at   DateTime  @default(now())
  updated_at   DateTime?

  @@map("books")
}

model Movie {
  id             String    @id @default(uuid())
  title          String    @unique
  year_release   Int
  image          String    @unique
  tmdb_link      String    @unique
  tmdb_rating    Int
  justwatch_link String?   @unique
  resume         String    @unique
  duration       String
  genres         String
  created_at     DateTime  @default(now())
  updated_at     DateTime?

  @@map("movies")
}

model Tvshow {
  id             String    @id @default(uuid())
  title          String    @unique
  year_release   Int
  image          String    @unique
  tmdb_link      String    @unique
  tmdb_rating    Int
  justwatch_link String?   @unique
  resume         String    @unique
  duration       String
  genres         String
  created_at     DateTime  @default(now())
  updated_at     DateTime?

  @@map("tv_shows")
}
